# shellcheck disable=SC2148,SC2034
################################################################################
## This file is only for operation and maintenance personnel, not for developer.
## 此文件包含密钥信息，为运维人员和管理人员使用。
################################################################################

## enable debug or disable debug / 开启调试模式，或者关闭调试模式
ENV_DEBUG=0

## 目标服务器的目标目录前缀 when deploy.conf 服务器目录=null
ENV_PATH_DEST_PRE="/var/www"
# ENV_PATH_DEST_PRE="/data"

## remove gitlab-project-name prefix
ENV_REMOVE_PROJ_PREFIX=false

## sonarqube url
ENV_SONAR_URL='http://sonar.example.com:9000/'
## sonarqube Community EditionVersion 9.0.1
## generate sonarqube token from sonarqube web page
ENV_SONAR_TOKEN='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'

## http proxy
# http_proxy='http://192.168.10.10:1080'
# https_proxy='http://192.168.10.10:1080'
# HTTP_PROXY='http://192.168.10.10:1080'
# HTTPS_PROXY='http://192.168.10.10:1080'

## install jq cli
ENV_INSTALL_JQ=true

## install aliyun cli
ENV_INSTALL_ALIYUN=false

## install Terraform cli
ENV_INSTALL_TERRAFORM=false

## install aws cli 2.x
ENV_INSTALL_AWS=false

## install kubectl cli latest
ENV_INSTALL_KUBECTL=false

## install helm 3.x
ENV_INSTALL_HELM=false

## install python-gitlab (gitlab api)
ENV_INSTALL_PYTHON_GITLAB=false

## install python-element
ENV_INSTALL_PYTHON_ELEMENT=false

## install jdk/jmeter
ENV_INSTALL_JMETER=false

## install cloudflare dns cli, flarectl
ENV_INSTALL_FLARECTL=false

## docker build --build-arg=CHANGE_SOURCE=true
ENV_IN_CHINA=false

## gitlab server ip
ENV_GITLAB_SERVER_IP='192.168.100.100'

## gitlab server domain name
ENV_GITLAB_DOMAIN='example.com'

## maven nexus server
ENV_MYNEXUS='nexus.example.com:192.168.100.101'

## get_maxmind_ip_db to nginx server ip
ENV_NGINX_IPS="192.168.101.101 192.168.101.102"

## send message to telegram. 0: disable, 1: enable
ENV_NOTIFY_TELEGRAM=0 ## disable
# ENV_NOTIFY_TELEGRAM=1  ## enable
ENV_API_KEY_TG='xxxxxxxxx:xxxx_xxxxxxxxx-xxxxxxxxx_xxxx_xxxxx' ## telegram api key, group id
ENV_TG_GROUP_ID='-xxxxxxxxx'

## send message to element (matrix.org). 0: disable, 1: enable
ENV_NOTIFY_ELEMENT=0 ## disable
# ENV_NOTIFY_ELEMENT=1  ## enable

## send message to work wechat. 0: disable, 1: enable
ENV_NOTIFY_WECHAT=0 ## disable
# ENV_NOTIFY_WECHAT=1  ## enable
ENV_WEIXIN_KEY=11111111111111 ## work weixin group key

## sendEmail 0: disable, 1: enable
ENV_NOTIFY_EMAIL=0 ## disable
# ENV_NOTIFY_EMAIL=1 ## enable
ENV_EMAIL_FROM=xx@yy.zz
ENV_EMAIL_TO=aa@bb.cc
ENV_EMAIL_SERVER=smtp.163.com
ENV_EMAIL_USERNAME=xx@yy.zz
ENV_EMAIL_PASSWORD=xxPassWord

# case "${gitlab_project_branch}" in
# develop)
#     env_namespace="dev"
#     ;;
# test | testing)
#     env_namespace="sit"
#     ;;
# uat | release)
#     env_namespace="uat"
#     ;;
# prod | master | main)
#     env_namespace="main"
#     ;;
# *)
#     env_namespace="${gitlab_project_branch}"
#     ;;
# esac

## docker login to [aws|aliyun|qcloud|other]
# ENV_DOCKER_LOGIN_TYPE=aws
ENV_DOCKER_LOGIN_TYPE=aliyun
# ENV_DOCKER_LOGIN_TYPE=qcloud

## aws configure
ENV_REGION_ID='ap-east-1'
ENV_DOCKER_REGISTRY='xxxxxxxxxxxx.dkr.ecr.ap-east-1.amazonaws.com/repo_east'
ENV_NFS_SERVER='fs-xxxxxxxx.efs.ap-east-1.amazonaws.com'
ENV_AWS_PROFILE='profile_east'

## update gitops values.yaml
ENV_DOCKER_REGISTRY_GITOPS='xxxxxxxxxxxx.dkr.ecr.ap-east-1.amazonaws.com'
ENV_DOCKER_REPO_GITOPS='repo_east'

## aliyun configure
ENV_DOCKER_REGISTRY='registry.cn-shenzhen.aliyuncs.com/ns/repo'
ENV_DOCKER_USERNAME='your_username'
ENV_DOCKER_PASSWORD='your_password'
# ENV_DOCKER_REPO='namespace/repo_name'

## docker login to [aws|aliyun|qcloud|other]
# if [[ -n "$env_namespace" ]]; then
#     if [[ "$env_namespace" =~ ^(master|main|uat|release)$ ]]; then
#         ENV_DOCKER_LOGIN_TYPE=aliyun
#         ENV_DOCKER_REGISTRY='nginx'
#         ENV_DOCKER_USERNAME='xxx@gmail.com'
#         ENV_DOCKER_PASSWORD='xxx'
#         kubectl_opt="kubectl --kubeconfig ${script_path_data}/.kube/config-main"
#         helm_opt="helm --kubeconfig ${script_path_data}/.kube/config-main"
#     else
#         ENV_DOCKER_LOGIN_TYPE=aliyun
#         ENV_DOCKER_REGISTRY='nginx-dev'
#         ENV_DOCKER_USERNAME='yyy@gmail.com'
#         ENV_DOCKER_PASSWORD='yyy'
#         kubectl_opt="kubectl --kubeconfig ${script_path_data}/.kube/config-dev"
#         helm_opt="helm --kubeconfig ${script_path_data}/.kube/config-dev"
#     fi
# fi

## gitlab project name of nginx
ENV_NGINX_GIT_NAME=nginx

## deploy flyway with k8s job, 0: not use helm, 1: use helm
ENV_FLYWAY_HELM_JOB=0

## flyway_sql folder in git repo, defautl "flyway_sql/"
ENV_FLYWAY_SQL=flyway_sql

## .acme.sh/dest as cert install folder
ENV_CERT_INSTALL=dest

## build.java.sh maven version
ENV_MAVEN_VER='3.6-jdk-8'

## gitlab project id "nginx"
ENV_NGINX_PROJECT_ID=(3 4)

## set alarm balance for aliyun
ENV_ALARM_BALANCE_ALIYUN=4000
ENV_WECHAT_KEY_ALARM=11111111111111 ## work weixin group key
ENV_TAKE_ALIYUN_PROFILE=profile_name_1,profile_name_2
# ENV_SKIP_ALIYUN_PROFILE=profile_name_3,profile_name_4
