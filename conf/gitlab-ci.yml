variables:
  GIT_CLEAN_FLAGS: -ffdx -e node_modules/ -e vendor/ -e yarn.lock

stages:
  - codeFormat
  - testUnit
  - build
  - deploy
  - dockerBuild
  - dockerPush
  - dockerDeploy
  - testFunction

cache:
  # untracked: true
  key: "$CI_PROJECT_PATH_SLUG"
  paths:
    - vendor/
    - composer.lock
    - node_modules/
    - yarn.lock

# format_check:
#   stage: codeFormat
#   script:
#     - bash deploy.sh 1
#   only:
#     - develop

# quality_check:
#   stage: codeFormat
#   script:
#     - bash deploy.sh 2
#   only:
#     - develop
#   when: manual
#   allow_failure: true

# unit_test:
#   stage: testUnit
#   script:
#     - bash deploy.sh 3
#   # when: manual
#   only:
#     - develop

k8s:
  stage: deploy
  # artifacts:
  #   untracked: true
  #   when: on_failure
  #   expire_in: 3 days
  #   paths:
  #     - target/
  #     - dist/
  script:
    - bash deploy.sh --github
  environment:
    name: ENV-${CI_COMMIT_REF_NAME}
    # url: https://git.example.com/root/pms/wikis/rules-domain
  only:
    - dev
    - develop
    - test
    - sit
    - testing
    - uat
    - master
    - main
  interruptible: true
# dockerBuildStage:
#   stage: dockerBuild
#   script:
#     - bash deploy.sh dockerBuildStage
#   when: manual
#   only:
#     - develop
#     - testing
#     - release
#     - master

# dockerPushHKC:
#   stage: dockerPush
#   script:
#     - bash deploy.sh dockerPushHKC deployk8s
#   when: manual
#   only:
#     - develop
#     - testing
#     - release
#     - master

# deploy_file:
#   stage: deploy
#   script:
#     - echo "Deploy file to [ ${CI_COMMIT_REF_NAME}_${CI_PROJECT_NAME} ]."
#     - bash /home/ubuntu/gitlab-runner/deploy.sh
#   dependencies:
#     - build
#   environment:
#     name: ENV-${CI_COMMIT_REF_NAME}
#     url: https://git.entry.one/coder/pms/wikis/rules-domain
#   only:
#     - develop
#     - master
#     - testing

# func_test:
#   stage: testFunction
#   script:
#     - echo "Running automated test."
#     - echo "http://192.168.60.254:81/jmeter/"
#     - bash deploy.sh 4
#   when: manual
