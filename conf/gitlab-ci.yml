variables:
  ## gitlab checkout 时不清理以下文件
  GIT_CLEAN_FLAGS: -ffdx -e node_modules/ -e vendor/ -e yarn.lock -e composer.lock -e .dockerignore

stages:
  - code_style      # 代码风格检查
  - code_quality    # 代码质量检查
  - test_unit       # 单元测试
  - build           # 构建
  - deploy          # 部署
  - test_function   # 功能性测试

cache:
  # untracked: true
  key: "$CI_PROJECT_PATH_SLUG"
  paths:
    - vendor/
    - composer.lock
    - node_modules/
    - yarn.lock

# code_style:
#   stage: code_style
#   script:
#     - bash $HOME/runner/deploy.sh --code-style
#   only:
#     - develop
#     - dev

# code_quality:
#   stage: code_quality
#   script:
#     - bash $HOME/runner/deploy.sh --code-quality
#   only:
#     - develop
#     - dev
#   when: manual
#   allow_failure: true

# test_unit:
#   stage: test_unit
#   script:
#     - bash $HOME/runner/deploy.sh --test-unit
#   # when: manual
#   only:
#     - develop
#     - dev

# build:
#   stage: build
#   script:
#     - bash $HOME/runner/deploy.sh --build-langs
#     - bash $HOME/runner/deploy.sh --build-image
#   when: manual
#   only:
#     - develop
#     - testing
#     - release
#     - master
#     - dev
#     - sit
#     - uat
#     - main
#     - prod

deploy:
  stage: deploy
  # artifacts:
  #   untracked: true
  #   when: on_failure
  #   expire_in: 3 days
  #   paths:
  #     - target/
  #     - dist/
  script:
    ## 全自动运行所有步骤
    - bash deploy.sh
    # - bash $HOME/runner/deploy.sh --deploy-rsync-ssh
    # - bash $HOME/runner/deploy.sh --deploy-rsync
    # - bash $HOME/runner/deploy.sh --deploy-ftp
    # - bash $HOME/runner/deploy.sh --deploy-sftp
  environment:
    name: ENV-${CI_COMMIT_REF_NAME}
  only:
    - develop
    - dev         ## 开发环境，等效于develop
    - testing
    - test        ## 测试环境，等效于testing
    - sit         ## 测试环境，等效于testing
    - release
    - uat         ## 测试环境，等效于release
    - main
    - prod        ## 生产环境，等效于main
    - master      ## 生产环境，等效于main
  interruptible: true  ## 中断任务，当有新的提交时，自动取消当前正在运行的job

# test_function:
#   stage: test_function
#   script:
#     - bash $HOME/runner/deploy.sh --test-function
#   when: manual
#   only:
#     - dev
#     - develop
#     - test
#     - sit
#     - testing
#     - uat
#     - release
