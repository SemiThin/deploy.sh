# shellcheck disable=SC2148,SC2034
################################################################################
## This file is only for operation and maintenance personnel, not for developer.
## 这个文件包含密钥信息，为运维人员和管理人员使用。
################################################################################

## gitlab namespace
#ENV_NAMESPACE=

## enable debug or disable debug
ENV_DEBUG=0

## 目标服务器的目标目录前缀 when 服务器目录=nodir
ENV_PATH_DEST_PRE="/var/www"
# ENV_PATH_DEST_PRE="/data"

## remove project name prefix
ENV_REMOVE_PROJ_PREFIX=true

## sonarqube url
ENV_SONAR_URL='http://sonar.example.com:9000/'
## sonarqube Community EditionVersion 9.0.1
## generate sonarqube token from sonarqube web page
ENV_SONAR_TOKEN='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'

## http proxy
#ENV_HTTP_PROXY='192.168.10.10:1080'

## install aws cli 2.x
ENV_INSTALL_AWS=false

## install kubectl cli latest
ENV_INSTALL_KUBECTL=false

## install helm 3.x
ENV_INSTALL_HELM=false

## install python-gitlab
ENV_INSTALL_PYTHON_GITLAB=false

## install python-element
ENV_INSTALL_PYTHON_ELEMENT=false

## docker build --build-arg=
ENV_CHANGE_SOURCE=false

## gitlab server ip
ENV_GITLAB_SERVER_IP='192.168.100.100'

## maven nexus server
ENV_MYNEXUS='nexus.example.com:192.168.100.101'

## git branch name
ENV_BRANCHS="develop testing master"

ENV_NGINX_IPS="192.168.101.101 192.168.101.102"

## send message to telegram. 0: disable, 1: enable
ENV_NOTIFY_TELEGRAM=0  ## disable
# ENV_NOTIFY_TELEGRAM=1  ## enable
ENV_API_KEY_TG='xxxxxxxxx:xxxx_xxxxxxxxx-xxxxxxxxx_xxxx_xxxxx'  ## telegram api key, group id
ENV_TG_GROUP_ID='-xxxxxxxxx'

## send message to element (matrix.org). 0: disable, 1: enable
ENV_NOTIFY_ELEMENT=0  ## disable
# ENV_NOTIFY_ELEMENT=1  ## enable

## send message to work wechat. 0: disable, 1: enable
ENV_NOTIFY_WEIXIN=0  ## disable
# ENV_NOTIFY_WEIXIN=1  ## enable
ENV_WEIXIN_KEY=11111111111111  ## work weixin group key

## sendEmail 0: disable, 1: enable
ENV_NOTIFY_EMAIL=0
ENV_EMAIL_FROM=xx@yy.zz
ENV_EMAIL_TO=aa@bb.cc
ENV_EMAIL_SERVER=smtp.163.com
ENV_EMAIL_USERNAME=xx@yy.zz
ENV_EMAIL_PASSWORD=xxPassWord

## docker login to [aws|aliyun|qcloud|other]
# ENV_DOCKER_LOGIN=aws
# ENV_DOCKER_LOGIN=aliyun
ENV_DOCKER_LOGIN=qcloud

## aws configure
ENV_REGION_ID='ap-east-1'
ENV_DOCKER_REGISTRY='xxxxxxxxxxxx.dkr.ecr.ap-east-1.amazonaws.com'
ENV_DOCKER_USERNAME='your_username'
ENV_DOCKER_PASSWORD='your_password'
ENV_DOCKER_REPO='repo_east'
ENV_NFS_SERVER='fs-xxxxxxxx.efs.ap-east-1.amazonaws.com'
ENV_AWS_PROFILE='profile_east'

## kubectl config
# kubectl config use-context arn:aws:eks:ap-east-1:xxxxxxxxxxxx:cluster/repohk

## helm config
ENV_HELM_DIR='bitnami/bitnami/tomcat'

## flyway use nfs server
# ENV_FLYWAY_NFS_FOLDER="$HOME/efs/flyway"

## branch dev: debug on
if [[ ${CI_PROJECT_NAME} == 'deploy.sh' || $ENV_DEBUG -eq 1 ]]; then
    set -x
    # ENV_DISABLE_DOCKER=1
    ENV_DISABLE_MSG=1
fi

## force rsync althogh the project has Dockerfile
ENV_FORCE_RSYNC=false

## deploy/composer or FROM Dockerfile
ENV_IMAGE_COMPOSER=Dockerfile

## gitlab project name of nginx
ENV_NGINX_GIT_NAME=nginx
