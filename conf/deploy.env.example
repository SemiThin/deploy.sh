# shellcheck disable=SC2148,SC2034
################################################################################
## This file is only for operation and maintenance personnel, not for developer.
## 此文件包含密钥信息，为运维人员和管理人员使用。
################################################################################

## enable debug or disable debug / 开启调试模式，或者关闭调试模式
ENV_DEBUG=0

## 目标服务器的目标目录前缀 when 服务器目录=nodir
ENV_PATH_DEST_PRE="/var/www"
# ENV_PATH_DEST_PRE="/data"

## remove gitlab-project-name prefix
ENV_REMOVE_PROJ_PREFIX=false

## sonarqube url
ENV_SONAR_URL='http://sonar.example.com:9000/'
## sonarqube Community EditionVersion 9.0.1
## generate sonarqube token from sonarqube web page
ENV_SONAR_TOKEN='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'

## http proxy
# ENV_HTTP_PROXY='192.168.10.10:1080'

## install aws cli 2.x
ENV_INSTALL_AWS=false

## install kubectl cli latest
ENV_INSTALL_KUBECTL=false

## install helm 3.x
ENV_INSTALL_HELM=false

## install python-gitlab
ENV_INSTALL_PYTHON_GITLAB=false

## install python-element
ENV_INSTALL_PYTHON_ELEMENT=false

## install jdk/jmeter
ENV_INSTALL_JMETER=false

## docker build --build-arg=
ENV_CHANGE_SOURCE=false

## gitlab server ip
ENV_GITLAB_SERVER_IP='192.168.100.100'

## maven nexus server
ENV_MYNEXUS='nexus.example.com:192.168.100.101'

ENV_NGINX_IPS="192.168.101.101 192.168.101.102"

## send message to telegram. 0: disable, 1: enable
ENV_NOTIFY_TELEGRAM=0  ## disable
# ENV_NOTIFY_TELEGRAM=1  ## enable
ENV_API_KEY_TG='xxxxxxxxx:xxxx_xxxxxxxxx-xxxxxxxxx_xxxx_xxxxx'  ## telegram api key, group id
ENV_TG_GROUP_ID='-xxxxxxxxx'

## send message to element (matrix.org). 0: disable, 1: enable
ENV_NOTIFY_ELEMENT=0  ## disable
# ENV_NOTIFY_ELEMENT=1  ## enable

## send message to work wechat. 0: disable, 1: enable
ENV_NOTIFY_WEIXIN=0  ## disable
# ENV_NOTIFY_WEIXIN=1  ## enable
ENV_WEIXIN_KEY=11111111111111  ## work weixin group key

## sendEmail 0: disable, 1: enable
ENV_NOTIFY_EMAIL=0 ## disable
# ENV_NOTIFY_EMAIL=1 ## enable
ENV_EMAIL_FROM=xx@yy.zz
ENV_EMAIL_TO=aa@bb.cc
ENV_EMAIL_SERVER=smtp.163.com
ENV_EMAIL_USERNAME=xx@yy.zz
ENV_EMAIL_PASSWORD=xxPassWord

## docker login to [aws|aliyun|qcloud|other]
# ENV_DOCKER_LOGIN_TYPE=aws
ENV_DOCKER_LOGIN_TYPE=aliyun
# ENV_DOCKER_LOGIN_TYPE=qcloud

## aws configure
ENV_REGION_ID='ap-east-1'
ENV_DOCKER_REGISTRY='xxxxxxxxxxxx.dkr.ecr.ap-east-1.amazonaws.com'
ENV_DOCKER_REPO='repo_east'
ENV_NFS_SERVER='fs-xxxxxxxx.efs.ap-east-1.amazonaws.com'
ENV_AWS_PROFILE='profile_east'

## update gitops values.yaml
ENV_DOCKER_REGISTRY_GITOPS='xxxxxxxxxxxx.dkr.ecr.ap-east-1.amazonaws.com'
ENV_DOCKER_REPO_GITOPS='repo_east'

## aliyun configure
ENV_DOCKER_REGISTRY='registry.cn-shenzhen.aliyuncs.com'
ENV_DOCKER_USERNAME='your_username'
ENV_DOCKER_PASSWORD='your_password'
ENV_DOCKER_REPO='namespace/repo_name'

## kubectl config
# kubectl config use-context arn:aws:eks:ap-east-1:xxxxxxxxxxxx:cluster/repohk
# kubectl_opt="kubectl --kubeconfig $HOME/.kube-dev/config"
# kubectl_opt="kubectl --kubeconfig $HOME/.kube-prod/config"
# helm_opt="helm --kubeconfig $HOME/.kube-dev/config"
# helm_opt="helm --kubeconfig $HOME/.kube-prod/config"

## force rsync althogh the project has Dockerfile
ENV_FORCE_RSYNC=false

## deploy/composer or FROM Dockerfile
ENV_IMAGE_COMPOSER=Dockerfile

## gitlab project name of nginx
ENV_NGINX_GIT_NAME=nginx

## flyway sql folder
ENV_FLYWAY_SQL=flyway_sql

## deploy method, just gitops files
## The specified branchs need to be deployed to gitops
ENV_BRANCH_GITOPS='b_master b_prod'
## After updating the gitops file, whether to continue to deploy to k8s, 0: do not deploy, 1: deploy,
ENV_ENABLE_HELM=1

## install cloudflare dns cli, flarectl
ENV_INSTALL_FLARECTL=false
